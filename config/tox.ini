# tox.ini

[tox]
envlist = py38, lint, black  # Define os ambientes de execução: py38 (Python 3.8), lint (análise estática com linters), black (formatação com Black)

[testenv]
deps =
    pytest  # Dependência para rodar testes com pytest
    flake8  # Dependência para análise de estilo de código com Flake8
    pylint  # Dependência para análise estática de código com Pylint
    black  # Dependência para formatação de código com Black
commands =
    pytest --maxfail=5 --disable-warnings -q  # Executa os testes, limitando a 5 falhas e desativando avisos, com saída silenciosa

[testenv:lint]
description = run linters  # Descrição do ambiente 'lint', que executa ferramentas de linting
deps = flake8  # Depende apenas do Flake8
commands = flake8 .  # Executa o Flake8 no diretório atual, analisando o código em busca de problemas de estilo

[testenv:black]
description = run black formatter  # Descrição do ambiente 'black', que executa o formatação de código com o Black
deps = black  # Depende do Black
commands = black --check --diff .  # Executa o Black para verificar se o código está no formato correto (-check), mostrando diferenças (-diff)

# Configurações do coverage
[coverage:run]
branch = True  # Habilita a coleta de cobertura de código também para as ramificações do código (condições if, loops, etc.)

[coverage:report]
show_missing = True  # Exibe as linhas de código que não foram cobertas pelos testes
skip_covered = True  # Ignora arquivos completamente cobertos (não exibe no relatório)
